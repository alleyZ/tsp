我们知道，使用JNI调用.dll/.so共享类库是非常非常麻烦和痛苦的。如果有一个现有的.dll/.so文件，如果使用JNI技术调用，
我们首先需要另外使用C语言写一个.dll/.so共享库，使用SUN规定的数据结构替代C语言的数据结构，调用已有的  dll/so中公布的函数。
然后再在Java中载入这个适配器dll/so，再编写Java   native函数作为dll中函数的代理。经过2个繁琐的步骤才能在Java中调用本地代码。
因此，很少有Java程序员愿意编写调用dll/.so库中的原生函数的java程序。这也使Java语言在客户端上乏善可陈。可以说JNI是Java的一大弱点
